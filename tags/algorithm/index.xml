<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithm on</title><link>https://aren227.me/tags/algorithm/</link><description>Recent content in algorithm on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 03 Nov 2022 01:57:19 +0900</lastBuildDate><atom:link href="https://aren227.me/tags/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Dijkstra algorithm</title><link>https://aren227.me/docs/algorithm/dijkstra-algorithm/</link><pubDate>Thu, 03 Nov 2022 01:57:19 +0900</pubDate><guid>https://aren227.me/docs/algorithm/dijkstra-algorithm/</guid><description/></item><item><title>A star algorithm</title><link>https://aren227.me/docs/algorithm/a-star-algorithm/</link><pubDate>Thu, 03 Nov 2022 01:56:59 +0900</pubDate><guid>https://aren227.me/docs/algorithm/a-star-algorithm/</guid><description>A star (A*) pathfinding algorithm.
It works almost same with Dijkstra algorithm, but with heuristic approach. Distance to all unvisited nodes are calculated with $g(v) + h(v)$ where $g(v)$ is the actual cost from start to $v$, $h(v)$ is the estimated cost from v to end.
If $h(v)$ is always $0$, it does exact same thing with Dijkstra algorithm.
In many path finding problems, we can get spatial information. A* algorithm uses this information as $h(v)$ to make searching faster.</description></item></channel></rss>